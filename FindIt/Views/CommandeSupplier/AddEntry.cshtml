@using FindIt.Models.Entities
@model EntryCommandeSupplier

@{
    ViewBag.Title = "AddEntry";
}

<h2>AddEntry</h2>
<div>
    @Html.ActionLink("Ajouter nouveau commande", "Add", new { id = 1 }, new { @class = "btn btn-primary btn-sm" })|
    @Html.ActionLink("Ajouter un nouveau produit", "AddEntry", new { id = 1 }, new { @class = "btn btn-primary btn-sm" })
</div>
@using (Html.BeginForm("AddEntry", "CommandeSupplier", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>EntryCommandeSupplier</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductId, "ProductId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProductId, @ViewBag.ProductList as IEnumerable<SelectListItem>, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


